{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/fp/Descargas/crud-clase-main/pages/index.js\";\n//Importamos lo necesario\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { Button, Card } from 'semantic-ui-react'; //Constante que muestra la aplicacion principal\n\nconst Index = ({\n  notes\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notas/Tareas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid wrapper\",\n      children: notes.map(note => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n              children: /*#__PURE__*/_jsxDEV(Card.Header, {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  href: `/${note._id}`,\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    children: note.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 19,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 18,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 17,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n              extra: true,\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                href: `/${note._id}`,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  primary: true,\n                  children: \"Ver nota\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 25,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                href: `/${note._id}/edit`,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  primary: true,\n                  children: \"Editar nota\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 15\n          }, this)\n        }, note._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}; //Esta funcion envia la pagina con los datos actualizados desde el servidor\n\n\nIndex.getInitialProps = async () => {\n  const res = await fetch('http://localhost:3000/api/notes');\n  const {\n    data\n  } = await res.json();\n  return {\n    notes: data\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/fp/Descargas/crud-clase-main/pages/index.js"],"names":["Link","fetch","Button","Card","Index","notes","map","note","_id","title","getInitialProps","res","data","json"],"mappings":";;AAAA;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B,C,CAEA;;AACA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC3B,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACGA,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAI;AACjB,4BACE;AAAA,iCACE,QAAC,IAAD;AAAA,oCACE,QAAC,IAAD,CAAM,OAAN;AAAA,qCACE,QAAC,IAAD,CAAM,MAAN;AAAA,uCACE,QAAC,IAAD;AAAM,kBAAA,IAAI,EAAG,IAAGA,IAAI,CAACC,GAAI,EAAzB;AAAA,yCACE;AAAA,8BAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,KAAK,MAAnB;AAAA,sCACE,QAAC,IAAD;AAAM,gBAAA,IAAI,EAAG,IAAGF,IAAI,CAACC,GAAI,EAAzB;AAAA,uCACE,QAAC,MAAD;AAAQ,kBAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,IAAD;AAAM,gBAAA,IAAI,EAAG,IAAGD,IAAI,CAACC,GAAI,OAAzB;AAAA,uCACE,QAAC,MAAD;AAAQ,kBAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAAUD,IAAI,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA,gBADF;AAqBD,OAtBA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CA/BD,C,CAiCA;;;AACAJ,KAAK,CAACM,eAAN,GAAwB,YAAY;AAClC,QAAMC,GAAG,GAAG,MAAMV,KAAK,CAAC,iCAAD,CAAvB;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAW,MAAMD,GAAG,CAACE,IAAJ,EAAvB;AAEA,SAAO;AAAER,IAAAA,KAAK,EAAEO;AAAT,GAAP;AACD,CALD;;AAOA,eAAeR,KAAf","sourcesContent":["//Importamos lo necesario\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { Button, Card } from 'semantic-ui-react';\n\n//Constante que muestra la aplicacion principal\nconst Index = ({ notes }) => {\n  return (\n    <div className=\"notes-container\">\n      <h1>Notas/Tareas</h1>\n      <div className=\"grid wrapper\">\n        {notes.map(note => {\n          return (\n            <div key={note._id}>\n              <Card>\n                <Card.Content>\n                  <Card.Header>\n                    <Link href={`/${note._id}`}>\n                      <a>{note.title}</a>\n                    </Link>\n                  </Card.Header>\n                </Card.Content>\n                <Card.Content extra>\n                  <Link href={`/${note._id}`}>\n                    <Button primary>Ver nota</Button>\n                  </Link>\n                  <Link href={`/${note._id}/edit`}>\n                    <Button primary>Editar nota</Button>\n                  </Link>\n                </Card.Content>\n              </Card>\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\n//Esta funcion envia la pagina con los datos actualizados desde el servidor\nIndex.getInitialProps = async () => {\n  const res = await fetch('http://localhost:3000/api/notes');\n  const { data } = await res.json();\n\n  return { notes: data }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}